1. You can either use a class component or a hooks based component. Either way it will need to be it’s own file and a new component.
2. You can render on any page, anywhere you like.
3. React only, no Redux.
4. If you have the ES7 extension, feel free to use it to create your component. Also feel free to copy / paste code from other components.
Enoch Griffith to Everyone (4:38 PM)
5. You can google, but only syntax, you can’t google how to make an increment button in react etc, so no walkthroughs.


  constructor(props) {
    super(props);
    this.state = {
      clicks: 0,
      show: true
    };
  }

  IncrementItem = () => {
    this.setState({ clicks: this.state.clicks + 1 });
  }
  DecreaseItem = () => {
    this.setState({ clicks: this.state.clicks - 1 });
  }
  ToggleClick = () => {
    this.setState({ show: !this.state.show });
  }

  render() {
    return (
      <div>
        <input type="text"
            value={this.state.value}
            onChange={this.handleChange}
         />
        <button onClick={this.IncrementItem}>Click to increment by 1</button>
        <button onClick={this.DecreaseItem}>Click to decrease by 1</button>
        <button onClick={this.ToggleClick}>
          { this.state.show ? 'Hide number' : 'Show number' }
        </button>
        { this.state.show ? <h2>{ this.state.clicks }</h2> : '' }
      </div>
    );
  }



  import React, {useState } from 'react'

const NewFeature = () => {
    let [textCount, setTextCount] = useState(0);

    return (
        <div>
            <input type='text'
                onChange={(e) => setTextCount(e.target.value.length)}
                placeholder='Enter some text here!'
                ></input>
                <p>text count:{textCount}</p>
            
        </div>
    )
}

export default NewFeature; 


import React from 'react'

class NewFeature extends React.Component{
    state = {
        text: '',
        textcount: 0

    }

    handleOnChange = (event) => {
        this.setState({[event.target.name]:event.target.value.length})
    }

    handleOnSubmit = (event) => {
        event.preventDefault()

    }

    render(){
        return(
            <div>
                <label>New Feature</label>
                <form onSubmit = {this.handleOnSubmit}>
                    <input 
                    type='text' 
                    name= 'content'
                    placeholder='Enter Text here!' 
                    value={this.state.text} 
                    onChange={this.handleOnChange} 
                    /> 
                    <p>total text count: {this.textcount}</p>
                    <input type='submit' /> 
                </form>
            </div>
        )
    }

}

export default NewFeature; 


import React, {useState } from 'react'

const NewFeature = () => {
    let [textCount, setTextCount] = useState(0);

    return (
        <div>
            <form onSubmit={this.handleSubmit}>
            <input type='text'
                onChange={(e) => setTextCount(e.target.value.length)}
                placeholder='Enter some text here!'
                ></input>
                <button type="submit">Submit</button>
                <p>text count:{textCount}</p>
            </form>
        </div>
    )
}